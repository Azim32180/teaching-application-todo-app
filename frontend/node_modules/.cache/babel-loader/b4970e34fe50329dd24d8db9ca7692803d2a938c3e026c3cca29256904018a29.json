{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./App.css\";import TodoList from\"./components/TodoList\";import AddToDo from\"./components/AddToDo\";import{getTodos,createTodo,updateTodo,deleteTodo}from\"./services/api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[todos,setTodos]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Fetch todos when component mounts\nuseEffect(()=>{fetchTodos();},[]);const fetchTodos=async()=>{try{setLoading(true);const data=await getTodos();setTodos(data);setError(null);}catch(err){setError(\"Failed to fetch todos\");console.error(\"Error fetching todos:\",err);}finally{setLoading(false);}};const handleAddTodo=async text=>{try{const newTodo=await createTodo(text);setTodos([...todos,newTodo]);setError(null);}catch(err){setError(\"Failed to add todo\");console.error(\"Error adding todo:\",err);}};const handleToggleTodo=async id=>{try{const todo=todos.find(t=>t.id===id);const updatedTodo=await updateTodo(id,{completed:!todo.completed});setTodos(todos.map(t=>t.id===id?updatedTodo:t));setError(null);}catch(err){setError(\"Failed to update todo\");console.error(\"Error updating todo:\",err);}};const handleDeleteTodo=async id=>{try{await deleteTodo(id);setTodos(todos.filter(t=>t.id!==id));setError(null);}catch(err){setError(\"Failed to delete todo\");console.error(\"Error deleting todo:\",err);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading...\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Todo App\"}),/*#__PURE__*/_jsx(\"p\",{children:\"A simple todo app built with React & Flask\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsx(AddToDo,{onAddTodo:handleAddTodo}),/*#__PURE__*/_jsx(TodoList,{todos:todos,onToggleTodo:handleToggleTodo,onDeleteTodo:handleDeleteTodo})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TodoList","AddToDo","getTodos","createTodo","updateTodo","deleteTodo","jsx","_jsx","jsxs","_jsxs","App","todos","setTodos","loading","setLoading","error","setError","fetchTodos","data","err","console","handleAddTodo","text","newTodo","handleToggleTodo","id","todo","find","t","updatedTodo","completed","map","handleDeleteTodo","filter","className","children","onAddTodo","onToggleTodo","onDeleteTodo"],"sources":["/Users/azim/Development/Projects/teaching-application-todo-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport AddToDo from \"./components/AddToDo\";\nimport { getTodos, createTodo, updateTodo, deleteTodo } from \"./services/api\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch todos when component mounts\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = async () => {\n    try {\n      setLoading(true);\n      const data = await getTodos();\n      setTodos(data);\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to fetch todos\");\n      console.error(\"Error fetching todos:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddTodo = async (text) => {\n    try {\n      const newTodo = await createTodo(text);\n      setTodos([...todos, newTodo]);\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to add todo\");\n      console.error(\"Error adding todo:\", err);\n    }\n  };\n\n  const handleToggleTodo = async (id) => {\n    try {\n      const todo = todos.find((t) => t.id === id);\n      const updatedTodo = await updateTodo(id, { completed: !todo.completed });\n      setTodos(todos.map((t) => (t.id === id ? updatedTodo : t)));\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to update todo\");\n      console.error(\"Error updating todo:\", err);\n    }\n  };\n\n  const handleDeleteTodo = async (id) => {\n    try {\n      await deleteTodo(id);\n      setTodos(todos.filter((t) => t.id !== id));\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to delete todo\");\n      console.error(\"Error deleting todo:\", err);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"app\">\n        <div className=\"loading\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>My Todo App</h1>\n        <p>A simple todo app built with React & Flask</p>\n      </header>\n\n      {error && <div className=\"error\">{error}</div>}\n\n      <main className=\"app-main\">\n        <AddToDo onAddTodo={handleAddTodo} />\n        <TodoList\n          todos={todos}\n          onToggleTodo={handleToggleTodo}\n          onDeleteTodo={handleDeleteTodo}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}