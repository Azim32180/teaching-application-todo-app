{"ast":null,"code":"const API_BASE_URL=\"http://localhost:5000/api\";// Helper function to handle API responses\nconst handleResponse=async response=>{if(!response.ok){const error=await response.json().catch(()=>({}));throw new Error(error.message||\"HTTP error! status: \".concat(response.status));}// Handle empty responses (like DELETE)\nif(response.status===204){return null;}return response.json();};export const getTodos=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos\"));return handleResponse(response);};export const createTodo=async text=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({text})});return handleResponse(response);};export const updateTodo=async(id,updates)=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos/\").concat(id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updates)});return handleResponse(response);};export const deleteTodo=async id=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos/\").concat(id),{method:\"DELETE\"});return handleResponse(response);};export const getTodoStats=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos/stats\"));return handleResponse(response);};export const getTodo=async id=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos/\").concat(id));return handleResponse(response);};","map":{"version":3,"names":["API_BASE_URL","handleResponse","response","ok","error","json","catch","Error","message","concat","status","getTodos","fetch","createTodo","text","method","headers","body","JSON","stringify","updateTodo","id","updates","deleteTodo","getTodoStats","getTodo"],"sources":["/Users/azim/Development/Projects/teaching-application-todo-app/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:5000/api\";\n\n// Helper function to handle API responses\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({}));\n    throw new Error(error.message || `HTTP error! status: ${response.status}`);\n  }\n\n  // Handle empty responses (like DELETE)\n  if (response.status === 204) {\n    return null;\n  }\n\n  return response.json();\n};\n\nexport const getTodos = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos`);\n  return handleResponse(response);\n};\n\nexport const createTodo = async (text) => {\n  const response = await fetch(`${API_BASE_URL}/todos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ text }),\n  });\n  return handleResponse(response);\n};\n\nexport const updateTodo = async (id, updates) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updates),\n  });\n  return handleResponse(response);\n};\n\nexport const deleteTodo = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: \"DELETE\",\n  });\n  return handleResponse(response);\n};\n\nexport const getTodoStats = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos/stats`);\n  return handleResponse(response);\n};\n\nexport const getTodo = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`);\n  return handleResponse(response);\n};\n"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,2BAA2B,CAEhD;AACA,KAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACzC,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACrD,KAAM,IAAI,CAAAC,KAAK,CAACH,KAAK,CAACI,OAAO,yBAAAC,MAAA,CAA2BP,QAAQ,CAACQ,MAAM,CAAE,CAAC,CAC5E,CAEA;AACA,GAAIR,QAAQ,CAACQ,MAAM,GAAK,GAAG,CAAE,CAC3B,MAAO,KAAI,CACb,CAEA,MAAO,CAAAR,QAAQ,CAACG,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,MAAO,MAAM,CAAAM,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAClC,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAU,KAAK,IAAAH,MAAA,CAAIT,YAAY,UAAQ,CAAC,CACrD,MAAO,CAAAC,cAAc,CAACC,QAAQ,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAW,UAAU,CAAG,KAAO,CAAAC,IAAI,EAAK,CACxC,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAU,KAAK,IAAAH,MAAA,CAAIT,YAAY,WAAU,CACpDe,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEL,IAAK,CAAC,CAC/B,CAAC,CAAC,CACF,MAAO,CAAAb,cAAc,CAACC,QAAQ,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAkB,UAAU,CAAG,KAAAA,CAAOC,EAAE,CAAEC,OAAO,GAAK,CAC/C,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAU,KAAK,IAAAH,MAAA,CAAIT,YAAY,YAAAS,MAAA,CAAUY,EAAE,EAAI,CAC1DN,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACG,OAAO,CAC9B,CAAC,CAAC,CACF,MAAO,CAAArB,cAAc,CAACC,QAAQ,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAqB,UAAU,CAAG,KAAO,CAAAF,EAAE,EAAK,CACtC,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAU,KAAK,IAAAH,MAAA,CAAIT,YAAY,YAAAS,MAAA,CAAUY,EAAE,EAAI,CAC1DN,MAAM,CAAE,QACV,CAAC,CAAC,CACF,MAAO,CAAAd,cAAc,CAACC,QAAQ,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAsB,YAAY,CAAG,KAAAA,CAAA,GAAY,CACtC,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAU,KAAK,IAAAH,MAAA,CAAIT,YAAY,gBAAc,CAAC,CAC3D,MAAO,CAAAC,cAAc,CAACC,QAAQ,CAAC,CACjC,CAAC,CAED,MAAO,MAAM,CAAAuB,OAAO,CAAG,KAAO,CAAAJ,EAAE,EAAK,CACnC,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAU,KAAK,IAAAH,MAAA,CAAIT,YAAY,YAAAS,MAAA,CAAUY,EAAE,CAAE,CAAC,CAC3D,MAAO,CAAApB,cAAc,CAACC,QAAQ,CAAC,CACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}