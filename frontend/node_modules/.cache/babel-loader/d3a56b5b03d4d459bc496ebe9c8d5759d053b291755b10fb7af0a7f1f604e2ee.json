{"ast":null,"code":"const API_BASE_URL = \"http://localhost:5050/api\";\n\n// Helper function to handle API responses\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({}));\n    throw new Error(error.message || `HTTP error! status: ${response.status}`);\n  }\n\n  // Handle empty responses (like DELETE)\n  if (response.status === 204) {\n    return null;\n  }\n  return response.json();\n};\nexport const getTodos = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos`);\n  return handleResponse(response);\n};\nexport const createTodo = async text => {\n  const response = await fetch(`${API_BASE_URL}/todos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      text\n    })\n  });\n  return handleResponse(response);\n};\nexport const updateTodo = async (id, updates) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updates)\n  });\n  return handleResponse(response);\n};\nexport const deleteTodo = async id => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: \"DELETE\"\n  });\n  return handleResponse(response);\n};\nexport const getTodoStats = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos/stats`);\n  return handleResponse(response);\n};\nexport const getTodo = async id => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`);\n  return handleResponse(response);\n};","map":{"version":3,"names":["API_BASE_URL","handleResponse","response","ok","error","json","catch","Error","message","status","getTodos","fetch","createTodo","text","method","headers","body","JSON","stringify","updateTodo","id","updates","deleteTodo","getTodoStats","getTodo"],"sources":["/Users/azim/Development/Projects/teaching-application-todo-app/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:5050/api\";\n\n// Helper function to handle API responses\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.json().catch(() => ({}));\n    throw new Error(error.message || `HTTP error! status: ${response.status}`);\n  }\n\n  // Handle empty responses (like DELETE)\n  if (response.status === 204) {\n    return null;\n  }\n\n  return response.json();\n};\n\nexport const getTodos = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos`);\n  return handleResponse(response);\n};\n\nexport const createTodo = async (text) => {\n  const response = await fetch(`${API_BASE_URL}/todos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ text }),\n  });\n  return handleResponse(response);\n};\n\nexport const updateTodo = async (id, updates) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(updates),\n  });\n  return handleResponse(response);\n};\n\nexport const deleteTodo = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`, {\n    method: \"DELETE\",\n  });\n  return handleResponse(response);\n};\n\nexport const getTodoStats = async () => {\n  const response = await fetch(`${API_BASE_URL}/todos/stats`);\n  return handleResponse(response);\n};\n\nexport const getTodo = async (id) => {\n  const response = await fetch(`${API_BASE_URL}/todos/${id}`);\n  return handleResponse(response);\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrD,MAAM,IAAIC,KAAK,CAACH,KAAK,CAACI,OAAO,IAAI,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;EAC5E;;EAEA;EACA,IAAIP,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;IAC3B,OAAO,IAAI;EACb;EAEA,OAAOP,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,QAAQ,CAAC;EACrD,OAAOC,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,MAAMX,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,QAAQ,EAAE;IACpDc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL;IAAK,CAAC;EAC/B,CAAC,CAAC;EACF,OAAOZ,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,OAAO,KAAK;EAC/C,MAAMnB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,UAAUoB,EAAE,EAAE,EAAE;IAC1DN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,OAAO;EAC9B,CAAC,CAAC;EACF,OAAOpB,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMoB,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,MAAMlB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,UAAUoB,EAAE,EAAE,EAAE;IAC1DN,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOb,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMqB,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMrB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,cAAc,CAAC;EAC3D,OAAOC,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC;AAED,OAAO,MAAMsB,OAAO,GAAG,MAAOJ,EAAE,IAAK;EACnC,MAAMlB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGX,YAAY,UAAUoB,EAAE,EAAE,CAAC;EAC3D,OAAOnB,cAAc,CAACC,QAAQ,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}